---
- hosts: all
  tasks:

    - name: "Read permission of GPG key directory"
      stat:
        path: /etc/pki/rpm-gpg/
      register: gpg_key_directory_permission
      # It should fail, if it doesn't find any fingerprints in file - maybe file was not parsed well.
    - name: "Read signatures in GPG key"
      shell: "gpg --with-fingerprint '/etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release' | grep 'Key fingerprint =' | tr -s ' ' | sed 's;.*= ;;g'"
      changed_when: False
      register: gpg_fingerprints
    - name: "Set Fact: Valid fingerprints"
      set_fact:
         gpg_valid_fingerprints: ("567E 347A D004 4ADE 55BA 8A5F 199E 2F91 FD43 1D51" "43A6 E49C 4A38 F4BE 9ABF 2A53 4568 9C88 2FA6 58E0")

    - name: "Import RedHat GPG key"
      rpm_key:
        state: present
        key: /etc/pki/rpm-gpg/RPM-GPG-KEY-redhat-release
      when:
        (gpg_key_directory_permission.stat.mode <= '0755')
        and ({{ gpg_fingerprints.stdout_lines | difference(gpg_valid_fingerprints) }} | length == 0)
        and (gpg_fingerprints.stdout_lines | length > 0)
        and (ansible_distribution == "RedHat")

    - name: "Check existence of yum on Fedora"
      stat:
        path: /etc/yum.conf
      register: yum_config_file
      when: ansible_distribution == "Fedora"
    # We can have yum also in Fedora, but probably not forever
    - name: Ensure GPG check is globally activated (yum)
      ini_file:
        dest: "{{ item }}"
        section: main
        option: gpgcheck
        value: 1
        create: False
      with_items: "/etc/yum.conf"
      when: ansible_distribution == "RedHat" or yum_config_file.stat.exists
    - name: Ensure GPG check is globally activated (dnf)
      ini_file:
        dest: "{{ item }}"
        section: main
        option: gpgcheck
        value: 1
        create: False
      with_items: "/etc/dnf/dnf.conf"
      when: ansible_distribution == "Fedora"

    - name: Ensure kernel module 'usb-storage' is disabled
      lineinfile:
        create: yes
        dest: "/etc/modprobe.d/{{ item }}.conf"
        regexp: "{{ item }}"
        line: "install {{ item }} /bin/true"
      with_items:
        - usb-storage

    - name: "Prevent Log In to Accounts With Empty Password"
      replace:
        dest: /etc/pam.d/system-auth
        regexp: 'nullok\s*'
        replace: ''

    - name: "Get root paths which are not symbolic links"
      shell: 'tr ":" "\n" <<< "$PATH" | xargs -I% find % -maxdepth 0 -type d'
      changed_when: False
      failed_when: False
      register: root_paths
      when: ansible_user == "root"

    - name: "Disable writability to root directories"
      file:
        path: "{{ item }}"
        mode: "g-w,o-w"
      with_items: "{{ root_paths.stdout_lines }}"
      when: root_paths.stdout_lines is defined

    - name: Ensure openssh-server is installed
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - openssh-server

    - name: Ensure sssd is installed
      package:
        name: "{{ item }}"
        state: present
      with_items:
        - sssd

    - name: Enable service sssd
      service:
        name: "{{ item }}"
        enabled: "yes"
        state: "started"
      with_items:
        - sssd

    - name: "The SSH daemon must be configured to only use the SSHv2 protocol."
      lineinfile:
        dest: /etc/ssh/sshd_config
        regexp: (?i)^#?protocol
        line: Protocol 2
        validate: sshd -t -f %s

